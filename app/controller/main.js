// Generated by CoffeeScript 1.7.1
(function() {
  var MainCtrl,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  MainCtrl = (function(_super) {
    var parseResponseComments, result;

    __extends(MainCtrl, _super);

    function MainCtrl() {
      return MainCtrl.__super__.constructor.apply(this, arguments);
    }

    MainCtrl.prototype.elements = {
      "#txtSearch": "search"
    };

    MainCtrl.prototype.events = {
      "tap li.selectable": "onOfert",
      "tap span#btnSearch": "OnSearch"
    };

    result = null;

    MainCtrl.prototype.initialize = function() {
      var db, url;
      Lungo.Notification.show();
      db = window.openDatabase("SiJoven", "1.0", "Test DB", 1000000);
      db.transaction(__Controller.Main.Query, __Controller.Main.Error, __Controller.Main.success);
      url = "http://rumbon.gopagoda.com/api/oferts";
      return Lungo.Service.get(url, "", parseResponseComments, "json");
    };

    parseResponseComments = function(data) {
      var view;
      result = {
        result: data
      };
      $$('section#main').html('');
      view = new __View.Main({
        model: result
      });
      view.append(result);
      Lungo.Router.section('main');
      return Lungo.Notification.hide();
    };

    MainCtrl.prototype.onOfert = function(e) {
      var id, myMap, row, _i, _len, _ref;
      myMap = {};
      _ref = result.result;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        row = _ref[_i];
        myMap[row.PkOferta] = {
          result: [
            {
              PkOferta: row.PkOferta,
              EntidadNombre: row.EntidadNombre,
              EdadObejtivo: row.EdadObejtivo,
              Oportunidad: row.Oportunidad,
              Ubicacion: row.Ubicacion,
              UrlFuente: row.UrlFuente
            }
          ]
        };
      }
      id = e.currentTarget.id;
      Lungo.Notification.show();
      return __Controller.Ofert.initialize(myMap[id]);
    };

    MainCtrl.prototype.OnSearch = function() {
      return console.log(this.search.val());
    };

    MainCtrl.prototype.Error = function(err) {
      return alert("Error processing SQL: " + err.code);
    };

    MainCtrl.prototype.success = function() {
      return console.log('success!');
    };

    MainCtrl.prototype.Query = function(tx) {
      tx.executeSql('CREATE TABLE IF NOT EXISTS favoritos (id unique, data)');
      return tx.executeSql('CREATE TABLE IF NOT EXISTS profile (id PRIMARY KEY, nombre, fecha, email, comentario, nivel )');
    };

    return MainCtrl;

  })(Monocle.Controller);

  Lungo.ready(function() {
    __Controller.Main = new MainCtrl("section#main");
    return __Controller.Main.initialize();
  });

}).call(this);
